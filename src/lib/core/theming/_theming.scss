@function gh-palette($default, $hover, $active) {
  $result: (
    default: $default,
    hover: $hover,
    active: $active,
  );
  @return $result;
}

@function gh-color($palette, $flavor: default) {
  @return map-get($palette, $flavor);
}

@function gh-theme-variants(
  $main-palette,
  $accent-palette,
  $warning-palette,
  $error-palette,
  $cta-palette
) {
  @return (
    light: (
      main: $main-palette,
      accent: $accent-palette,
      warning: $warning-palette,
      error: $error-palette,
      cta: $cta-palette,
      is-dark: false
    ),
    dark: (
      main: $main-palette,
      accent: $accent-palette,
      warning: $warning-palette,
      error: $error-palette,
      cta: $cta-palette,
      is-dark: true
    )
  );
}

@mixin gh-component-theme(
  $name,
  $default,
  $main-palette,
  $accent-palette,
  $warning-palette,
  $error-palette,
  $cta-palette
) {
  $variants: gh-theme-variants(
    $main-palette,
    $accent-palette,
    $warning-palette,
    $error-palette,
    $cta-palette);

  @if $default == false {
    .gh-theme-#{$name},
    .gh-theme-#{$name}-light {
      @include gh-theme(map-get($variants, 'light'));
    }
  }
  @else {
    @include gh-core();
    @include gh-theme(map-get($variants, 'light'));
  }
  .gh-theme-#{$name}-dark {
    @include gh-theme(map-get($variants, 'dark'));
  }
}
